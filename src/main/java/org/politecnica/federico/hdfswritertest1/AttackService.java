/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.politecnica.federico.hdfswritertest1;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-09-27")
public class AttackService {

  /**
   * ***********
   *  SERVICIOS *
   * ***********
   */
  public interface Iface {

    public void setAttackSummary(long attackId, java.lang.String summary, java.lang.String descripcion) throws org.apache.thrift.TException;

    public void setAttackLatitude(long attackId, double latitude, java.lang.String descripcion) throws org.apache.thrift.TException;

    public void setAttackLongitude(long attackId, double longitude, java.lang.String descripcion) throws org.apache.thrift.TException;

    public void setAttackNumberOfKills(long attackId, long numberOfKills, java.lang.String descripcion) throws org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void setAttackSummary(long attackId, java.lang.String summary, java.lang.String descripcion, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void setAttackLatitude(long attackId, double latitude, java.lang.String descripcion, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void setAttackLongitude(long attackId, double longitude, java.lang.String descripcion, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void setAttackNumberOfKills(long attackId, long numberOfKills, java.lang.String descripcion, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public void setAttackSummary(long attackId, java.lang.String summary, java.lang.String descripcion) throws org.apache.thrift.TException
    {
      send_setAttackSummary(attackId, summary, descripcion);
      recv_setAttackSummary();
    }

    public void send_setAttackSummary(long attackId, java.lang.String summary, java.lang.String descripcion) throws org.apache.thrift.TException
    {
      setAttackSummary_args args = new setAttackSummary_args();
      args.setAttackId(attackId);
      args.setSummary(summary);
      args.setDescripcion(descripcion);
      sendBase("setAttackSummary", args);
    }

    public void recv_setAttackSummary() throws org.apache.thrift.TException
    {
      setAttackSummary_result result = new setAttackSummary_result();
      receiveBase(result, "setAttackSummary");
      return;
    }

    public void setAttackLatitude(long attackId, double latitude, java.lang.String descripcion) throws org.apache.thrift.TException
    {
      send_setAttackLatitude(attackId, latitude, descripcion);
      recv_setAttackLatitude();
    }

    public void send_setAttackLatitude(long attackId, double latitude, java.lang.String descripcion) throws org.apache.thrift.TException
    {
      setAttackLatitude_args args = new setAttackLatitude_args();
      args.setAttackId(attackId);
      args.setLatitude(latitude);
      args.setDescripcion(descripcion);
      sendBase("setAttackLatitude", args);
    }

    public void recv_setAttackLatitude() throws org.apache.thrift.TException
    {
      setAttackLatitude_result result = new setAttackLatitude_result();
      receiveBase(result, "setAttackLatitude");
      return;
    }

    public void setAttackLongitude(long attackId, double longitude, java.lang.String descripcion) throws org.apache.thrift.TException
    {
      send_setAttackLongitude(attackId, longitude, descripcion);
      recv_setAttackLongitude();
    }

    public void send_setAttackLongitude(long attackId, double longitude, java.lang.String descripcion) throws org.apache.thrift.TException
    {
      setAttackLongitude_args args = new setAttackLongitude_args();
      args.setAttackId(attackId);
      args.setLongitude(longitude);
      args.setDescripcion(descripcion);
      sendBase("setAttackLongitude", args);
    }

    public void recv_setAttackLongitude() throws org.apache.thrift.TException
    {
      setAttackLongitude_result result = new setAttackLongitude_result();
      receiveBase(result, "setAttackLongitude");
      return;
    }

    public void setAttackNumberOfKills(long attackId, long numberOfKills, java.lang.String descripcion) throws org.apache.thrift.TException
    {
      send_setAttackNumberOfKills(attackId, numberOfKills, descripcion);
      recv_setAttackNumberOfKills();
    }

    public void send_setAttackNumberOfKills(long attackId, long numberOfKills, java.lang.String descripcion) throws org.apache.thrift.TException
    {
      setAttackNumberOfKills_args args = new setAttackNumberOfKills_args();
      args.setAttackId(attackId);
      args.setNumberOfKills(numberOfKills);
      args.setDescripcion(descripcion);
      sendBase("setAttackNumberOfKills", args);
    }

    public void recv_setAttackNumberOfKills() throws org.apache.thrift.TException
    {
      setAttackNumberOfKills_result result = new setAttackNumberOfKills_result();
      receiveBase(result, "setAttackNumberOfKills");
      return;
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void setAttackSummary(long attackId, java.lang.String summary, java.lang.String descripcion, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      setAttackSummary_call method_call = new setAttackSummary_call(attackId, summary, descripcion, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class setAttackSummary_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private long attackId;
      private java.lang.String summary;
      private java.lang.String descripcion;
      public setAttackSummary_call(long attackId, java.lang.String summary, java.lang.String descripcion, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.attackId = attackId;
        this.summary = summary;
        this.descripcion = descripcion;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("setAttackSummary", org.apache.thrift.protocol.TMessageType.CALL, 0));
        setAttackSummary_args args = new setAttackSummary_args();
        args.setAttackId(attackId);
        args.setSummary(summary);
        args.setDescripcion(descripcion);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void setAttackLatitude(long attackId, double latitude, java.lang.String descripcion, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      setAttackLatitude_call method_call = new setAttackLatitude_call(attackId, latitude, descripcion, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class setAttackLatitude_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private long attackId;
      private double latitude;
      private java.lang.String descripcion;
      public setAttackLatitude_call(long attackId, double latitude, java.lang.String descripcion, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.attackId = attackId;
        this.latitude = latitude;
        this.descripcion = descripcion;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("setAttackLatitude", org.apache.thrift.protocol.TMessageType.CALL, 0));
        setAttackLatitude_args args = new setAttackLatitude_args();
        args.setAttackId(attackId);
        args.setLatitude(latitude);
        args.setDescripcion(descripcion);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void setAttackLongitude(long attackId, double longitude, java.lang.String descripcion, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      setAttackLongitude_call method_call = new setAttackLongitude_call(attackId, longitude, descripcion, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class setAttackLongitude_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private long attackId;
      private double longitude;
      private java.lang.String descripcion;
      public setAttackLongitude_call(long attackId, double longitude, java.lang.String descripcion, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.attackId = attackId;
        this.longitude = longitude;
        this.descripcion = descripcion;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("setAttackLongitude", org.apache.thrift.protocol.TMessageType.CALL, 0));
        setAttackLongitude_args args = new setAttackLongitude_args();
        args.setAttackId(attackId);
        args.setLongitude(longitude);
        args.setDescripcion(descripcion);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void setAttackNumberOfKills(long attackId, long numberOfKills, java.lang.String descripcion, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      setAttackNumberOfKills_call method_call = new setAttackNumberOfKills_call(attackId, numberOfKills, descripcion, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class setAttackNumberOfKills_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private long attackId;
      private long numberOfKills;
      private java.lang.String descripcion;
      public setAttackNumberOfKills_call(long attackId, long numberOfKills, java.lang.String descripcion, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.attackId = attackId;
        this.numberOfKills = numberOfKills;
        this.descripcion = descripcion;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("setAttackNumberOfKills", org.apache.thrift.protocol.TMessageType.CALL, 0));
        setAttackNumberOfKills_args args = new setAttackNumberOfKills_args();
        args.setAttackId(attackId);
        args.setNumberOfKills(numberOfKills);
        args.setDescripcion(descripcion);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("setAttackSummary", new setAttackSummary());
      processMap.put("setAttackLatitude", new setAttackLatitude());
      processMap.put("setAttackLongitude", new setAttackLongitude());
      processMap.put("setAttackNumberOfKills", new setAttackNumberOfKills());
      return processMap;
    }

    public static class setAttackSummary<I extends Iface> extends org.apache.thrift.ProcessFunction<I, setAttackSummary_args> {
      public setAttackSummary() {
        super("setAttackSummary");
      }

      public setAttackSummary_args getEmptyArgsInstance() {
        return new setAttackSummary_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public setAttackSummary_result getResult(I iface, setAttackSummary_args args) throws org.apache.thrift.TException {
        setAttackSummary_result result = new setAttackSummary_result();
        iface.setAttackSummary(args.attackId, args.summary, args.descripcion);
        return result;
      }
    }

    public static class setAttackLatitude<I extends Iface> extends org.apache.thrift.ProcessFunction<I, setAttackLatitude_args> {
      public setAttackLatitude() {
        super("setAttackLatitude");
      }

      public setAttackLatitude_args getEmptyArgsInstance() {
        return new setAttackLatitude_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public setAttackLatitude_result getResult(I iface, setAttackLatitude_args args) throws org.apache.thrift.TException {
        setAttackLatitude_result result = new setAttackLatitude_result();
        iface.setAttackLatitude(args.attackId, args.latitude, args.descripcion);
        return result;
      }
    }

    public static class setAttackLongitude<I extends Iface> extends org.apache.thrift.ProcessFunction<I, setAttackLongitude_args> {
      public setAttackLongitude() {
        super("setAttackLongitude");
      }

      public setAttackLongitude_args getEmptyArgsInstance() {
        return new setAttackLongitude_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public setAttackLongitude_result getResult(I iface, setAttackLongitude_args args) throws org.apache.thrift.TException {
        setAttackLongitude_result result = new setAttackLongitude_result();
        iface.setAttackLongitude(args.attackId, args.longitude, args.descripcion);
        return result;
      }
    }

    public static class setAttackNumberOfKills<I extends Iface> extends org.apache.thrift.ProcessFunction<I, setAttackNumberOfKills_args> {
      public setAttackNumberOfKills() {
        super("setAttackNumberOfKills");
      }

      public setAttackNumberOfKills_args getEmptyArgsInstance() {
        return new setAttackNumberOfKills_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public setAttackNumberOfKills_result getResult(I iface, setAttackNumberOfKills_args args) throws org.apache.thrift.TException {
        setAttackNumberOfKills_result result = new setAttackNumberOfKills_result();
        iface.setAttackNumberOfKills(args.attackId, args.numberOfKills, args.descripcion);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("setAttackSummary", new setAttackSummary());
      processMap.put("setAttackLatitude", new setAttackLatitude());
      processMap.put("setAttackLongitude", new setAttackLongitude());
      processMap.put("setAttackNumberOfKills", new setAttackNumberOfKills());
      return processMap;
    }

    public static class setAttackSummary<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, setAttackSummary_args, Void> {
      public setAttackSummary() {
        super("setAttackSummary");
      }

      public setAttackSummary_args getEmptyArgsInstance() {
        return new setAttackSummary_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            setAttackSummary_result result = new setAttackSummary_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            setAttackSummary_result result = new setAttackSummary_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, setAttackSummary_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.setAttackSummary(args.attackId, args.summary, args.descripcion,resultHandler);
      }
    }

    public static class setAttackLatitude<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, setAttackLatitude_args, Void> {
      public setAttackLatitude() {
        super("setAttackLatitude");
      }

      public setAttackLatitude_args getEmptyArgsInstance() {
        return new setAttackLatitude_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            setAttackLatitude_result result = new setAttackLatitude_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            setAttackLatitude_result result = new setAttackLatitude_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, setAttackLatitude_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.setAttackLatitude(args.attackId, args.latitude, args.descripcion,resultHandler);
      }
    }

    public static class setAttackLongitude<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, setAttackLongitude_args, Void> {
      public setAttackLongitude() {
        super("setAttackLongitude");
      }

      public setAttackLongitude_args getEmptyArgsInstance() {
        return new setAttackLongitude_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            setAttackLongitude_result result = new setAttackLongitude_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            setAttackLongitude_result result = new setAttackLongitude_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, setAttackLongitude_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.setAttackLongitude(args.attackId, args.longitude, args.descripcion,resultHandler);
      }
    }

    public static class setAttackNumberOfKills<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, setAttackNumberOfKills_args, Void> {
      public setAttackNumberOfKills() {
        super("setAttackNumberOfKills");
      }

      public setAttackNumberOfKills_args getEmptyArgsInstance() {
        return new setAttackNumberOfKills_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            setAttackNumberOfKills_result result = new setAttackNumberOfKills_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            setAttackNumberOfKills_result result = new setAttackNumberOfKills_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, setAttackNumberOfKills_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.setAttackNumberOfKills(args.attackId, args.numberOfKills, args.descripcion,resultHandler);
      }
    }

  }

  public static class setAttackSummary_args implements org.apache.thrift.TBase<setAttackSummary_args, setAttackSummary_args._Fields>, java.io.Serializable, Cloneable, Comparable<setAttackSummary_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("setAttackSummary_args");

    private static final org.apache.thrift.protocol.TField ATTACK_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("attackId", org.apache.thrift.protocol.TType.I64, (short)1);
    private static final org.apache.thrift.protocol.TField SUMMARY_FIELD_DESC = new org.apache.thrift.protocol.TField("summary", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField DESCRIPCION_FIELD_DESC = new org.apache.thrift.protocol.TField("descripcion", org.apache.thrift.protocol.TType.STRING, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new setAttackSummary_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new setAttackSummary_argsTupleSchemeFactory();

    public long attackId; // required
    public java.lang.String summary; // required
    public java.lang.String descripcion; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ATTACK_ID((short)1, "attackId"),
      SUMMARY((short)2, "summary"),
      DESCRIPCION((short)3, "descripcion");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ATTACK_ID
            return ATTACK_ID;
          case 2: // SUMMARY
            return SUMMARY;
          case 3: // DESCRIPCION
            return DESCRIPCION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __ATTACKID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ATTACK_ID, new org.apache.thrift.meta_data.FieldMetaData("attackId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      tmpMap.put(_Fields.SUMMARY, new org.apache.thrift.meta_data.FieldMetaData("summary", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DESCRIPCION, new org.apache.thrift.meta_data.FieldMetaData("descripcion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(setAttackSummary_args.class, metaDataMap);
    }

    public setAttackSummary_args() {
    }

    public setAttackSummary_args(
      long attackId,
      java.lang.String summary,
      java.lang.String descripcion)
    {
      this();
      this.attackId = attackId;
      setAttackIdIsSet(true);
      this.summary = summary;
      this.descripcion = descripcion;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public setAttackSummary_args(setAttackSummary_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.attackId = other.attackId;
      if (other.isSetSummary()) {
        this.summary = other.summary;
      }
      if (other.isSetDescripcion()) {
        this.descripcion = other.descripcion;
      }
    }

    public setAttackSummary_args deepCopy() {
      return new setAttackSummary_args(this);
    }

    @Override
    public void clear() {
      setAttackIdIsSet(false);
      this.attackId = 0;
      this.summary = null;
      this.descripcion = null;
    }

    public long getAttackId() {
      return this.attackId;
    }

    public setAttackSummary_args setAttackId(long attackId) {
      this.attackId = attackId;
      setAttackIdIsSet(true);
      return this;
    }

    public void unsetAttackId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ATTACKID_ISSET_ID);
    }

    /** Returns true if field attackId is set (has been assigned a value) and false otherwise */
    public boolean isSetAttackId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ATTACKID_ISSET_ID);
    }

    public void setAttackIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ATTACKID_ISSET_ID, value);
    }

    public java.lang.String getSummary() {
      return this.summary;
    }

    public setAttackSummary_args setSummary(java.lang.String summary) {
      this.summary = summary;
      return this;
    }

    public void unsetSummary() {
      this.summary = null;
    }

    /** Returns true if field summary is set (has been assigned a value) and false otherwise */
    public boolean isSetSummary() {
      return this.summary != null;
    }

    public void setSummaryIsSet(boolean value) {
      if (!value) {
        this.summary = null;
      }
    }

    public java.lang.String getDescripcion() {
      return this.descripcion;
    }

    public setAttackSummary_args setDescripcion(java.lang.String descripcion) {
      this.descripcion = descripcion;
      return this;
    }

    public void unsetDescripcion() {
      this.descripcion = null;
    }

    /** Returns true if field descripcion is set (has been assigned a value) and false otherwise */
    public boolean isSetDescripcion() {
      return this.descripcion != null;
    }

    public void setDescripcionIsSet(boolean value) {
      if (!value) {
        this.descripcion = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ATTACK_ID:
        if (value == null) {
          unsetAttackId();
        } else {
          setAttackId((java.lang.Long)value);
        }
        break;

      case SUMMARY:
        if (value == null) {
          unsetSummary();
        } else {
          setSummary((java.lang.String)value);
        }
        break;

      case DESCRIPCION:
        if (value == null) {
          unsetDescripcion();
        } else {
          setDescripcion((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ATTACK_ID:
        return getAttackId();

      case SUMMARY:
        return getSummary();

      case DESCRIPCION:
        return getDescripcion();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ATTACK_ID:
        return isSetAttackId();
      case SUMMARY:
        return isSetSummary();
      case DESCRIPCION:
        return isSetDescripcion();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof setAttackSummary_args)
        return this.equals((setAttackSummary_args)that);
      return false;
    }

    public boolean equals(setAttackSummary_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_attackId = true;
      boolean that_present_attackId = true;
      if (this_present_attackId || that_present_attackId) {
        if (!(this_present_attackId && that_present_attackId))
          return false;
        if (this.attackId != that.attackId)
          return false;
      }

      boolean this_present_summary = true && this.isSetSummary();
      boolean that_present_summary = true && that.isSetSummary();
      if (this_present_summary || that_present_summary) {
        if (!(this_present_summary && that_present_summary))
          return false;
        if (!this.summary.equals(that.summary))
          return false;
      }

      boolean this_present_descripcion = true && this.isSetDescripcion();
      boolean that_present_descripcion = true && that.isSetDescripcion();
      if (this_present_descripcion || that_present_descripcion) {
        if (!(this_present_descripcion && that_present_descripcion))
          return false;
        if (!this.descripcion.equals(that.descripcion))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(attackId);

      hashCode = hashCode * 8191 + ((isSetSummary()) ? 131071 : 524287);
      if (isSetSummary())
        hashCode = hashCode * 8191 + summary.hashCode();

      hashCode = hashCode * 8191 + ((isSetDescripcion()) ? 131071 : 524287);
      if (isSetDescripcion())
        hashCode = hashCode * 8191 + descripcion.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(setAttackSummary_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAttackId()).compareTo(other.isSetAttackId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAttackId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.attackId, other.attackId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetSummary()).compareTo(other.isSetSummary());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSummary()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.summary, other.summary);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDescripcion()).compareTo(other.isSetDescripcion());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDescripcion()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descripcion, other.descripcion);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("setAttackSummary_args(");
      boolean first = true;

      sb.append("attackId:");
      sb.append(this.attackId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("summary:");
      if (this.summary == null) {
        sb.append("null");
      } else {
        sb.append(this.summary);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("descripcion:");
      if (this.descripcion == null) {
        sb.append("null");
      } else {
        sb.append(this.descripcion);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class setAttackSummary_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackSummary_argsStandardScheme getScheme() {
        return new setAttackSummary_argsStandardScheme();
      }
    }

    private static class setAttackSummary_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<setAttackSummary_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, setAttackSummary_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ATTACK_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.attackId = iprot.readI64();
                struct.setAttackIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // SUMMARY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.summary = iprot.readString();
                struct.setSummaryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // DESCRIPCION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.descripcion = iprot.readString();
                struct.setDescripcionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, setAttackSummary_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(ATTACK_ID_FIELD_DESC);
        oprot.writeI64(struct.attackId);
        oprot.writeFieldEnd();
        if (struct.summary != null) {
          oprot.writeFieldBegin(SUMMARY_FIELD_DESC);
          oprot.writeString(struct.summary);
          oprot.writeFieldEnd();
        }
        if (struct.descripcion != null) {
          oprot.writeFieldBegin(DESCRIPCION_FIELD_DESC);
          oprot.writeString(struct.descripcion);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class setAttackSummary_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackSummary_argsTupleScheme getScheme() {
        return new setAttackSummary_argsTupleScheme();
      }
    }

    private static class setAttackSummary_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<setAttackSummary_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, setAttackSummary_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAttackId()) {
          optionals.set(0);
        }
        if (struct.isSetSummary()) {
          optionals.set(1);
        }
        if (struct.isSetDescripcion()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetAttackId()) {
          oprot.writeI64(struct.attackId);
        }
        if (struct.isSetSummary()) {
          oprot.writeString(struct.summary);
        }
        if (struct.isSetDescripcion()) {
          oprot.writeString(struct.descripcion);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, setAttackSummary_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.attackId = iprot.readI64();
          struct.setAttackIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.summary = iprot.readString();
          struct.setSummaryIsSet(true);
        }
        if (incoming.get(2)) {
          struct.descripcion = iprot.readString();
          struct.setDescripcionIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class setAttackSummary_result implements org.apache.thrift.TBase<setAttackSummary_result, setAttackSummary_result._Fields>, java.io.Serializable, Cloneable, Comparable<setAttackSummary_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("setAttackSummary_result");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new setAttackSummary_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new setAttackSummary_resultTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(setAttackSummary_result.class, metaDataMap);
    }

    public setAttackSummary_result() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public setAttackSummary_result(setAttackSummary_result other) {
    }

    public setAttackSummary_result deepCopy() {
      return new setAttackSummary_result(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof setAttackSummary_result)
        return this.equals((setAttackSummary_result)that);
      return false;
    }

    public boolean equals(setAttackSummary_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(setAttackSummary_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("setAttackSummary_result(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class setAttackSummary_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackSummary_resultStandardScheme getScheme() {
        return new setAttackSummary_resultStandardScheme();
      }
    }

    private static class setAttackSummary_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<setAttackSummary_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, setAttackSummary_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, setAttackSummary_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class setAttackSummary_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackSummary_resultTupleScheme getScheme() {
        return new setAttackSummary_resultTupleScheme();
      }
    }

    private static class setAttackSummary_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<setAttackSummary_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, setAttackSummary_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, setAttackSummary_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class setAttackLatitude_args implements org.apache.thrift.TBase<setAttackLatitude_args, setAttackLatitude_args._Fields>, java.io.Serializable, Cloneable, Comparable<setAttackLatitude_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("setAttackLatitude_args");

    private static final org.apache.thrift.protocol.TField ATTACK_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("attackId", org.apache.thrift.protocol.TType.I64, (short)1);
    private static final org.apache.thrift.protocol.TField LATITUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("latitude", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
    private static final org.apache.thrift.protocol.TField DESCRIPCION_FIELD_DESC = new org.apache.thrift.protocol.TField("descripcion", org.apache.thrift.protocol.TType.STRING, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new setAttackLatitude_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new setAttackLatitude_argsTupleSchemeFactory();

    public long attackId; // required
    public double latitude; // required
    public java.lang.String descripcion; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ATTACK_ID((short)1, "attackId"),
      LATITUDE((short)2, "latitude"),
      DESCRIPCION((short)3, "descripcion");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ATTACK_ID
            return ATTACK_ID;
          case 2: // LATITUDE
            return LATITUDE;
          case 3: // DESCRIPCION
            return DESCRIPCION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __ATTACKID_ISSET_ID = 0;
    private static final int __LATITUDE_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ATTACK_ID, new org.apache.thrift.meta_data.FieldMetaData("attackId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      tmpMap.put(_Fields.LATITUDE, new org.apache.thrift.meta_data.FieldMetaData("latitude", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
      tmpMap.put(_Fields.DESCRIPCION, new org.apache.thrift.meta_data.FieldMetaData("descripcion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(setAttackLatitude_args.class, metaDataMap);
    }

    public setAttackLatitude_args() {
    }

    public setAttackLatitude_args(
      long attackId,
      double latitude,
      java.lang.String descripcion)
    {
      this();
      this.attackId = attackId;
      setAttackIdIsSet(true);
      this.latitude = latitude;
      setLatitudeIsSet(true);
      this.descripcion = descripcion;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public setAttackLatitude_args(setAttackLatitude_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.attackId = other.attackId;
      this.latitude = other.latitude;
      if (other.isSetDescripcion()) {
        this.descripcion = other.descripcion;
      }
    }

    public setAttackLatitude_args deepCopy() {
      return new setAttackLatitude_args(this);
    }

    @Override
    public void clear() {
      setAttackIdIsSet(false);
      this.attackId = 0;
      setLatitudeIsSet(false);
      this.latitude = 0.0;
      this.descripcion = null;
    }

    public long getAttackId() {
      return this.attackId;
    }

    public setAttackLatitude_args setAttackId(long attackId) {
      this.attackId = attackId;
      setAttackIdIsSet(true);
      return this;
    }

    public void unsetAttackId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ATTACKID_ISSET_ID);
    }

    /** Returns true if field attackId is set (has been assigned a value) and false otherwise */
    public boolean isSetAttackId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ATTACKID_ISSET_ID);
    }

    public void setAttackIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ATTACKID_ISSET_ID, value);
    }

    public double getLatitude() {
      return this.latitude;
    }

    public setAttackLatitude_args setLatitude(double latitude) {
      this.latitude = latitude;
      setLatitudeIsSet(true);
      return this;
    }

    public void unsetLatitude() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LATITUDE_ISSET_ID);
    }

    /** Returns true if field latitude is set (has been assigned a value) and false otherwise */
    public boolean isSetLatitude() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LATITUDE_ISSET_ID);
    }

    public void setLatitudeIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LATITUDE_ISSET_ID, value);
    }

    public java.lang.String getDescripcion() {
      return this.descripcion;
    }

    public setAttackLatitude_args setDescripcion(java.lang.String descripcion) {
      this.descripcion = descripcion;
      return this;
    }

    public void unsetDescripcion() {
      this.descripcion = null;
    }

    /** Returns true if field descripcion is set (has been assigned a value) and false otherwise */
    public boolean isSetDescripcion() {
      return this.descripcion != null;
    }

    public void setDescripcionIsSet(boolean value) {
      if (!value) {
        this.descripcion = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ATTACK_ID:
        if (value == null) {
          unsetAttackId();
        } else {
          setAttackId((java.lang.Long)value);
        }
        break;

      case LATITUDE:
        if (value == null) {
          unsetLatitude();
        } else {
          setLatitude((java.lang.Double)value);
        }
        break;

      case DESCRIPCION:
        if (value == null) {
          unsetDescripcion();
        } else {
          setDescripcion((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ATTACK_ID:
        return getAttackId();

      case LATITUDE:
        return getLatitude();

      case DESCRIPCION:
        return getDescripcion();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ATTACK_ID:
        return isSetAttackId();
      case LATITUDE:
        return isSetLatitude();
      case DESCRIPCION:
        return isSetDescripcion();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof setAttackLatitude_args)
        return this.equals((setAttackLatitude_args)that);
      return false;
    }

    public boolean equals(setAttackLatitude_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_attackId = true;
      boolean that_present_attackId = true;
      if (this_present_attackId || that_present_attackId) {
        if (!(this_present_attackId && that_present_attackId))
          return false;
        if (this.attackId != that.attackId)
          return false;
      }

      boolean this_present_latitude = true;
      boolean that_present_latitude = true;
      if (this_present_latitude || that_present_latitude) {
        if (!(this_present_latitude && that_present_latitude))
          return false;
        if (this.latitude != that.latitude)
          return false;
      }

      boolean this_present_descripcion = true && this.isSetDescripcion();
      boolean that_present_descripcion = true && that.isSetDescripcion();
      if (this_present_descripcion || that_present_descripcion) {
        if (!(this_present_descripcion && that_present_descripcion))
          return false;
        if (!this.descripcion.equals(that.descripcion))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(attackId);

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(latitude);

      hashCode = hashCode * 8191 + ((isSetDescripcion()) ? 131071 : 524287);
      if (isSetDescripcion())
        hashCode = hashCode * 8191 + descripcion.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(setAttackLatitude_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAttackId()).compareTo(other.isSetAttackId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAttackId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.attackId, other.attackId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetLatitude()).compareTo(other.isSetLatitude());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLatitude()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.latitude, other.latitude);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDescripcion()).compareTo(other.isSetDescripcion());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDescripcion()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descripcion, other.descripcion);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("setAttackLatitude_args(");
      boolean first = true;

      sb.append("attackId:");
      sb.append(this.attackId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("latitude:");
      sb.append(this.latitude);
      first = false;
      if (!first) sb.append(", ");
      sb.append("descripcion:");
      if (this.descripcion == null) {
        sb.append("null");
      } else {
        sb.append(this.descripcion);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class setAttackLatitude_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackLatitude_argsStandardScheme getScheme() {
        return new setAttackLatitude_argsStandardScheme();
      }
    }

    private static class setAttackLatitude_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<setAttackLatitude_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, setAttackLatitude_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ATTACK_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.attackId = iprot.readI64();
                struct.setAttackIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // LATITUDE
              if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
                struct.latitude = iprot.readDouble();
                struct.setLatitudeIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // DESCRIPCION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.descripcion = iprot.readString();
                struct.setDescripcionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, setAttackLatitude_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(ATTACK_ID_FIELD_DESC);
        oprot.writeI64(struct.attackId);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(LATITUDE_FIELD_DESC);
        oprot.writeDouble(struct.latitude);
        oprot.writeFieldEnd();
        if (struct.descripcion != null) {
          oprot.writeFieldBegin(DESCRIPCION_FIELD_DESC);
          oprot.writeString(struct.descripcion);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class setAttackLatitude_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackLatitude_argsTupleScheme getScheme() {
        return new setAttackLatitude_argsTupleScheme();
      }
    }

    private static class setAttackLatitude_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<setAttackLatitude_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, setAttackLatitude_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAttackId()) {
          optionals.set(0);
        }
        if (struct.isSetLatitude()) {
          optionals.set(1);
        }
        if (struct.isSetDescripcion()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetAttackId()) {
          oprot.writeI64(struct.attackId);
        }
        if (struct.isSetLatitude()) {
          oprot.writeDouble(struct.latitude);
        }
        if (struct.isSetDescripcion()) {
          oprot.writeString(struct.descripcion);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, setAttackLatitude_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.attackId = iprot.readI64();
          struct.setAttackIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.latitude = iprot.readDouble();
          struct.setLatitudeIsSet(true);
        }
        if (incoming.get(2)) {
          struct.descripcion = iprot.readString();
          struct.setDescripcionIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class setAttackLatitude_result implements org.apache.thrift.TBase<setAttackLatitude_result, setAttackLatitude_result._Fields>, java.io.Serializable, Cloneable, Comparable<setAttackLatitude_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("setAttackLatitude_result");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new setAttackLatitude_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new setAttackLatitude_resultTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(setAttackLatitude_result.class, metaDataMap);
    }

    public setAttackLatitude_result() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public setAttackLatitude_result(setAttackLatitude_result other) {
    }

    public setAttackLatitude_result deepCopy() {
      return new setAttackLatitude_result(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof setAttackLatitude_result)
        return this.equals((setAttackLatitude_result)that);
      return false;
    }

    public boolean equals(setAttackLatitude_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(setAttackLatitude_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("setAttackLatitude_result(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class setAttackLatitude_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackLatitude_resultStandardScheme getScheme() {
        return new setAttackLatitude_resultStandardScheme();
      }
    }

    private static class setAttackLatitude_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<setAttackLatitude_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, setAttackLatitude_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, setAttackLatitude_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class setAttackLatitude_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackLatitude_resultTupleScheme getScheme() {
        return new setAttackLatitude_resultTupleScheme();
      }
    }

    private static class setAttackLatitude_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<setAttackLatitude_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, setAttackLatitude_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, setAttackLatitude_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class setAttackLongitude_args implements org.apache.thrift.TBase<setAttackLongitude_args, setAttackLongitude_args._Fields>, java.io.Serializable, Cloneable, Comparable<setAttackLongitude_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("setAttackLongitude_args");

    private static final org.apache.thrift.protocol.TField ATTACK_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("attackId", org.apache.thrift.protocol.TType.I64, (short)1);
    private static final org.apache.thrift.protocol.TField LONGITUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("longitude", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
    private static final org.apache.thrift.protocol.TField DESCRIPCION_FIELD_DESC = new org.apache.thrift.protocol.TField("descripcion", org.apache.thrift.protocol.TType.STRING, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new setAttackLongitude_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new setAttackLongitude_argsTupleSchemeFactory();

    public long attackId; // required
    public double longitude; // required
    public java.lang.String descripcion; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ATTACK_ID((short)1, "attackId"),
      LONGITUDE((short)2, "longitude"),
      DESCRIPCION((short)3, "descripcion");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ATTACK_ID
            return ATTACK_ID;
          case 2: // LONGITUDE
            return LONGITUDE;
          case 3: // DESCRIPCION
            return DESCRIPCION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __ATTACKID_ISSET_ID = 0;
    private static final int __LONGITUDE_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ATTACK_ID, new org.apache.thrift.meta_data.FieldMetaData("attackId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      tmpMap.put(_Fields.LONGITUDE, new org.apache.thrift.meta_data.FieldMetaData("longitude", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
      tmpMap.put(_Fields.DESCRIPCION, new org.apache.thrift.meta_data.FieldMetaData("descripcion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(setAttackLongitude_args.class, metaDataMap);
    }

    public setAttackLongitude_args() {
    }

    public setAttackLongitude_args(
      long attackId,
      double longitude,
      java.lang.String descripcion)
    {
      this();
      this.attackId = attackId;
      setAttackIdIsSet(true);
      this.longitude = longitude;
      setLongitudeIsSet(true);
      this.descripcion = descripcion;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public setAttackLongitude_args(setAttackLongitude_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.attackId = other.attackId;
      this.longitude = other.longitude;
      if (other.isSetDescripcion()) {
        this.descripcion = other.descripcion;
      }
    }

    public setAttackLongitude_args deepCopy() {
      return new setAttackLongitude_args(this);
    }

    @Override
    public void clear() {
      setAttackIdIsSet(false);
      this.attackId = 0;
      setLongitudeIsSet(false);
      this.longitude = 0.0;
      this.descripcion = null;
    }

    public long getAttackId() {
      return this.attackId;
    }

    public setAttackLongitude_args setAttackId(long attackId) {
      this.attackId = attackId;
      setAttackIdIsSet(true);
      return this;
    }

    public void unsetAttackId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ATTACKID_ISSET_ID);
    }

    /** Returns true if field attackId is set (has been assigned a value) and false otherwise */
    public boolean isSetAttackId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ATTACKID_ISSET_ID);
    }

    public void setAttackIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ATTACKID_ISSET_ID, value);
    }

    public double getLongitude() {
      return this.longitude;
    }

    public setAttackLongitude_args setLongitude(double longitude) {
      this.longitude = longitude;
      setLongitudeIsSet(true);
      return this;
    }

    public void unsetLongitude() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LONGITUDE_ISSET_ID);
    }

    /** Returns true if field longitude is set (has been assigned a value) and false otherwise */
    public boolean isSetLongitude() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LONGITUDE_ISSET_ID);
    }

    public void setLongitudeIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LONGITUDE_ISSET_ID, value);
    }

    public java.lang.String getDescripcion() {
      return this.descripcion;
    }

    public setAttackLongitude_args setDescripcion(java.lang.String descripcion) {
      this.descripcion = descripcion;
      return this;
    }

    public void unsetDescripcion() {
      this.descripcion = null;
    }

    /** Returns true if field descripcion is set (has been assigned a value) and false otherwise */
    public boolean isSetDescripcion() {
      return this.descripcion != null;
    }

    public void setDescripcionIsSet(boolean value) {
      if (!value) {
        this.descripcion = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ATTACK_ID:
        if (value == null) {
          unsetAttackId();
        } else {
          setAttackId((java.lang.Long)value);
        }
        break;

      case LONGITUDE:
        if (value == null) {
          unsetLongitude();
        } else {
          setLongitude((java.lang.Double)value);
        }
        break;

      case DESCRIPCION:
        if (value == null) {
          unsetDescripcion();
        } else {
          setDescripcion((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ATTACK_ID:
        return getAttackId();

      case LONGITUDE:
        return getLongitude();

      case DESCRIPCION:
        return getDescripcion();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ATTACK_ID:
        return isSetAttackId();
      case LONGITUDE:
        return isSetLongitude();
      case DESCRIPCION:
        return isSetDescripcion();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof setAttackLongitude_args)
        return this.equals((setAttackLongitude_args)that);
      return false;
    }

    public boolean equals(setAttackLongitude_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_attackId = true;
      boolean that_present_attackId = true;
      if (this_present_attackId || that_present_attackId) {
        if (!(this_present_attackId && that_present_attackId))
          return false;
        if (this.attackId != that.attackId)
          return false;
      }

      boolean this_present_longitude = true;
      boolean that_present_longitude = true;
      if (this_present_longitude || that_present_longitude) {
        if (!(this_present_longitude && that_present_longitude))
          return false;
        if (this.longitude != that.longitude)
          return false;
      }

      boolean this_present_descripcion = true && this.isSetDescripcion();
      boolean that_present_descripcion = true && that.isSetDescripcion();
      if (this_present_descripcion || that_present_descripcion) {
        if (!(this_present_descripcion && that_present_descripcion))
          return false;
        if (!this.descripcion.equals(that.descripcion))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(attackId);

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(longitude);

      hashCode = hashCode * 8191 + ((isSetDescripcion()) ? 131071 : 524287);
      if (isSetDescripcion())
        hashCode = hashCode * 8191 + descripcion.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(setAttackLongitude_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAttackId()).compareTo(other.isSetAttackId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAttackId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.attackId, other.attackId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetLongitude()).compareTo(other.isSetLongitude());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLongitude()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.longitude, other.longitude);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDescripcion()).compareTo(other.isSetDescripcion());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDescripcion()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descripcion, other.descripcion);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("setAttackLongitude_args(");
      boolean first = true;

      sb.append("attackId:");
      sb.append(this.attackId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("longitude:");
      sb.append(this.longitude);
      first = false;
      if (!first) sb.append(", ");
      sb.append("descripcion:");
      if (this.descripcion == null) {
        sb.append("null");
      } else {
        sb.append(this.descripcion);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class setAttackLongitude_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackLongitude_argsStandardScheme getScheme() {
        return new setAttackLongitude_argsStandardScheme();
      }
    }

    private static class setAttackLongitude_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<setAttackLongitude_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, setAttackLongitude_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ATTACK_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.attackId = iprot.readI64();
                struct.setAttackIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // LONGITUDE
              if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
                struct.longitude = iprot.readDouble();
                struct.setLongitudeIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // DESCRIPCION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.descripcion = iprot.readString();
                struct.setDescripcionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, setAttackLongitude_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(ATTACK_ID_FIELD_DESC);
        oprot.writeI64(struct.attackId);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(LONGITUDE_FIELD_DESC);
        oprot.writeDouble(struct.longitude);
        oprot.writeFieldEnd();
        if (struct.descripcion != null) {
          oprot.writeFieldBegin(DESCRIPCION_FIELD_DESC);
          oprot.writeString(struct.descripcion);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class setAttackLongitude_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackLongitude_argsTupleScheme getScheme() {
        return new setAttackLongitude_argsTupleScheme();
      }
    }

    private static class setAttackLongitude_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<setAttackLongitude_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, setAttackLongitude_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAttackId()) {
          optionals.set(0);
        }
        if (struct.isSetLongitude()) {
          optionals.set(1);
        }
        if (struct.isSetDescripcion()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetAttackId()) {
          oprot.writeI64(struct.attackId);
        }
        if (struct.isSetLongitude()) {
          oprot.writeDouble(struct.longitude);
        }
        if (struct.isSetDescripcion()) {
          oprot.writeString(struct.descripcion);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, setAttackLongitude_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.attackId = iprot.readI64();
          struct.setAttackIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.longitude = iprot.readDouble();
          struct.setLongitudeIsSet(true);
        }
        if (incoming.get(2)) {
          struct.descripcion = iprot.readString();
          struct.setDescripcionIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class setAttackLongitude_result implements org.apache.thrift.TBase<setAttackLongitude_result, setAttackLongitude_result._Fields>, java.io.Serializable, Cloneable, Comparable<setAttackLongitude_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("setAttackLongitude_result");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new setAttackLongitude_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new setAttackLongitude_resultTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(setAttackLongitude_result.class, metaDataMap);
    }

    public setAttackLongitude_result() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public setAttackLongitude_result(setAttackLongitude_result other) {
    }

    public setAttackLongitude_result deepCopy() {
      return new setAttackLongitude_result(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof setAttackLongitude_result)
        return this.equals((setAttackLongitude_result)that);
      return false;
    }

    public boolean equals(setAttackLongitude_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(setAttackLongitude_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("setAttackLongitude_result(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class setAttackLongitude_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackLongitude_resultStandardScheme getScheme() {
        return new setAttackLongitude_resultStandardScheme();
      }
    }

    private static class setAttackLongitude_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<setAttackLongitude_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, setAttackLongitude_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, setAttackLongitude_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class setAttackLongitude_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackLongitude_resultTupleScheme getScheme() {
        return new setAttackLongitude_resultTupleScheme();
      }
    }

    private static class setAttackLongitude_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<setAttackLongitude_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, setAttackLongitude_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, setAttackLongitude_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class setAttackNumberOfKills_args implements org.apache.thrift.TBase<setAttackNumberOfKills_args, setAttackNumberOfKills_args._Fields>, java.io.Serializable, Cloneable, Comparable<setAttackNumberOfKills_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("setAttackNumberOfKills_args");

    private static final org.apache.thrift.protocol.TField ATTACK_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("attackId", org.apache.thrift.protocol.TType.I64, (short)1);
    private static final org.apache.thrift.protocol.TField NUMBER_OF_KILLS_FIELD_DESC = new org.apache.thrift.protocol.TField("numberOfKills", org.apache.thrift.protocol.TType.I64, (short)2);
    private static final org.apache.thrift.protocol.TField DESCRIPCION_FIELD_DESC = new org.apache.thrift.protocol.TField("descripcion", org.apache.thrift.protocol.TType.STRING, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new setAttackNumberOfKills_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new setAttackNumberOfKills_argsTupleSchemeFactory();

    public long attackId; // required
    public long numberOfKills; // required
    public java.lang.String descripcion; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ATTACK_ID((short)1, "attackId"),
      NUMBER_OF_KILLS((short)2, "numberOfKills"),
      DESCRIPCION((short)3, "descripcion");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ATTACK_ID
            return ATTACK_ID;
          case 2: // NUMBER_OF_KILLS
            return NUMBER_OF_KILLS;
          case 3: // DESCRIPCION
            return DESCRIPCION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __ATTACKID_ISSET_ID = 0;
    private static final int __NUMBEROFKILLS_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ATTACK_ID, new org.apache.thrift.meta_data.FieldMetaData("attackId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      tmpMap.put(_Fields.NUMBER_OF_KILLS, new org.apache.thrift.meta_data.FieldMetaData("numberOfKills", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      tmpMap.put(_Fields.DESCRIPCION, new org.apache.thrift.meta_data.FieldMetaData("descripcion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(setAttackNumberOfKills_args.class, metaDataMap);
    }

    public setAttackNumberOfKills_args() {
    }

    public setAttackNumberOfKills_args(
      long attackId,
      long numberOfKills,
      java.lang.String descripcion)
    {
      this();
      this.attackId = attackId;
      setAttackIdIsSet(true);
      this.numberOfKills = numberOfKills;
      setNumberOfKillsIsSet(true);
      this.descripcion = descripcion;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public setAttackNumberOfKills_args(setAttackNumberOfKills_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.attackId = other.attackId;
      this.numberOfKills = other.numberOfKills;
      if (other.isSetDescripcion()) {
        this.descripcion = other.descripcion;
      }
    }

    public setAttackNumberOfKills_args deepCopy() {
      return new setAttackNumberOfKills_args(this);
    }

    @Override
    public void clear() {
      setAttackIdIsSet(false);
      this.attackId = 0;
      setNumberOfKillsIsSet(false);
      this.numberOfKills = 0;
      this.descripcion = null;
    }

    public long getAttackId() {
      return this.attackId;
    }

    public setAttackNumberOfKills_args setAttackId(long attackId) {
      this.attackId = attackId;
      setAttackIdIsSet(true);
      return this;
    }

    public void unsetAttackId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ATTACKID_ISSET_ID);
    }

    /** Returns true if field attackId is set (has been assigned a value) and false otherwise */
    public boolean isSetAttackId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ATTACKID_ISSET_ID);
    }

    public void setAttackIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ATTACKID_ISSET_ID, value);
    }

    public long getNumberOfKills() {
      return this.numberOfKills;
    }

    public setAttackNumberOfKills_args setNumberOfKills(long numberOfKills) {
      this.numberOfKills = numberOfKills;
      setNumberOfKillsIsSet(true);
      return this;
    }

    public void unsetNumberOfKills() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NUMBEROFKILLS_ISSET_ID);
    }

    /** Returns true if field numberOfKills is set (has been assigned a value) and false otherwise */
    public boolean isSetNumberOfKills() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NUMBEROFKILLS_ISSET_ID);
    }

    public void setNumberOfKillsIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NUMBEROFKILLS_ISSET_ID, value);
    }

    public java.lang.String getDescripcion() {
      return this.descripcion;
    }

    public setAttackNumberOfKills_args setDescripcion(java.lang.String descripcion) {
      this.descripcion = descripcion;
      return this;
    }

    public void unsetDescripcion() {
      this.descripcion = null;
    }

    /** Returns true if field descripcion is set (has been assigned a value) and false otherwise */
    public boolean isSetDescripcion() {
      return this.descripcion != null;
    }

    public void setDescripcionIsSet(boolean value) {
      if (!value) {
        this.descripcion = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ATTACK_ID:
        if (value == null) {
          unsetAttackId();
        } else {
          setAttackId((java.lang.Long)value);
        }
        break;

      case NUMBER_OF_KILLS:
        if (value == null) {
          unsetNumberOfKills();
        } else {
          setNumberOfKills((java.lang.Long)value);
        }
        break;

      case DESCRIPCION:
        if (value == null) {
          unsetDescripcion();
        } else {
          setDescripcion((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ATTACK_ID:
        return getAttackId();

      case NUMBER_OF_KILLS:
        return getNumberOfKills();

      case DESCRIPCION:
        return getDescripcion();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ATTACK_ID:
        return isSetAttackId();
      case NUMBER_OF_KILLS:
        return isSetNumberOfKills();
      case DESCRIPCION:
        return isSetDescripcion();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof setAttackNumberOfKills_args)
        return this.equals((setAttackNumberOfKills_args)that);
      return false;
    }

    public boolean equals(setAttackNumberOfKills_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_attackId = true;
      boolean that_present_attackId = true;
      if (this_present_attackId || that_present_attackId) {
        if (!(this_present_attackId && that_present_attackId))
          return false;
        if (this.attackId != that.attackId)
          return false;
      }

      boolean this_present_numberOfKills = true;
      boolean that_present_numberOfKills = true;
      if (this_present_numberOfKills || that_present_numberOfKills) {
        if (!(this_present_numberOfKills && that_present_numberOfKills))
          return false;
        if (this.numberOfKills != that.numberOfKills)
          return false;
      }

      boolean this_present_descripcion = true && this.isSetDescripcion();
      boolean that_present_descripcion = true && that.isSetDescripcion();
      if (this_present_descripcion || that_present_descripcion) {
        if (!(this_present_descripcion && that_present_descripcion))
          return false;
        if (!this.descripcion.equals(that.descripcion))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(attackId);

      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(numberOfKills);

      hashCode = hashCode * 8191 + ((isSetDescripcion()) ? 131071 : 524287);
      if (isSetDescripcion())
        hashCode = hashCode * 8191 + descripcion.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(setAttackNumberOfKills_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAttackId()).compareTo(other.isSetAttackId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAttackId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.attackId, other.attackId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetNumberOfKills()).compareTo(other.isSetNumberOfKills());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetNumberOfKills()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numberOfKills, other.numberOfKills);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDescripcion()).compareTo(other.isSetDescripcion());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDescripcion()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descripcion, other.descripcion);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("setAttackNumberOfKills_args(");
      boolean first = true;

      sb.append("attackId:");
      sb.append(this.attackId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("numberOfKills:");
      sb.append(this.numberOfKills);
      first = false;
      if (!first) sb.append(", ");
      sb.append("descripcion:");
      if (this.descripcion == null) {
        sb.append("null");
      } else {
        sb.append(this.descripcion);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class setAttackNumberOfKills_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackNumberOfKills_argsStandardScheme getScheme() {
        return new setAttackNumberOfKills_argsStandardScheme();
      }
    }

    private static class setAttackNumberOfKills_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<setAttackNumberOfKills_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, setAttackNumberOfKills_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ATTACK_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.attackId = iprot.readI64();
                struct.setAttackIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // NUMBER_OF_KILLS
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.numberOfKills = iprot.readI64();
                struct.setNumberOfKillsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // DESCRIPCION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.descripcion = iprot.readString();
                struct.setDescripcionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, setAttackNumberOfKills_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(ATTACK_ID_FIELD_DESC);
        oprot.writeI64(struct.attackId);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(NUMBER_OF_KILLS_FIELD_DESC);
        oprot.writeI64(struct.numberOfKills);
        oprot.writeFieldEnd();
        if (struct.descripcion != null) {
          oprot.writeFieldBegin(DESCRIPCION_FIELD_DESC);
          oprot.writeString(struct.descripcion);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class setAttackNumberOfKills_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackNumberOfKills_argsTupleScheme getScheme() {
        return new setAttackNumberOfKills_argsTupleScheme();
      }
    }

    private static class setAttackNumberOfKills_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<setAttackNumberOfKills_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, setAttackNumberOfKills_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAttackId()) {
          optionals.set(0);
        }
        if (struct.isSetNumberOfKills()) {
          optionals.set(1);
        }
        if (struct.isSetDescripcion()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetAttackId()) {
          oprot.writeI64(struct.attackId);
        }
        if (struct.isSetNumberOfKills()) {
          oprot.writeI64(struct.numberOfKills);
        }
        if (struct.isSetDescripcion()) {
          oprot.writeString(struct.descripcion);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, setAttackNumberOfKills_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.attackId = iprot.readI64();
          struct.setAttackIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.numberOfKills = iprot.readI64();
          struct.setNumberOfKillsIsSet(true);
        }
        if (incoming.get(2)) {
          struct.descripcion = iprot.readString();
          struct.setDescripcionIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class setAttackNumberOfKills_result implements org.apache.thrift.TBase<setAttackNumberOfKills_result, setAttackNumberOfKills_result._Fields>, java.io.Serializable, Cloneable, Comparable<setAttackNumberOfKills_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("setAttackNumberOfKills_result");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new setAttackNumberOfKills_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new setAttackNumberOfKills_resultTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(setAttackNumberOfKills_result.class, metaDataMap);
    }

    public setAttackNumberOfKills_result() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public setAttackNumberOfKills_result(setAttackNumberOfKills_result other) {
    }

    public setAttackNumberOfKills_result deepCopy() {
      return new setAttackNumberOfKills_result(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof setAttackNumberOfKills_result)
        return this.equals((setAttackNumberOfKills_result)that);
      return false;
    }

    public boolean equals(setAttackNumberOfKills_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(setAttackNumberOfKills_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("setAttackNumberOfKills_result(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class setAttackNumberOfKills_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackNumberOfKills_resultStandardScheme getScheme() {
        return new setAttackNumberOfKills_resultStandardScheme();
      }
    }

    private static class setAttackNumberOfKills_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<setAttackNumberOfKills_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, setAttackNumberOfKills_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, setAttackNumberOfKills_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class setAttackNumberOfKills_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setAttackNumberOfKills_resultTupleScheme getScheme() {
        return new setAttackNumberOfKills_resultTupleScheme();
      }
    }

    private static class setAttackNumberOfKills_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<setAttackNumberOfKills_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, setAttackNumberOfKills_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, setAttackNumberOfKills_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
